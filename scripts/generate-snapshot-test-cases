#!/bin/bash

SNAPSHOTS_ROOT="crates/amaru/tests/snapshots"
BASE_TESTS_DIR="crates/amaru/tests"

# Check if snapshots directory exists
if [[ ! -d "$SNAPSHOTS_ROOT" ]]; then
    echo "Error: Directory $SNAPSHOTS_ROOT does not exist"
    exit 1
fi

# Iterate through network directories
for NETWORK_PATH in "$SNAPSHOTS_ROOT"/*; do
    if [[ -d "$NETWORK_PATH" ]]; then
        NETWORK_NAME=$(basename "$NETWORK_PATH")
        NETWORK_TESTS_DIR="$BASE_TESTS_DIR/snapshots/$NETWORK_NAME"
        DEST_PATH="$NETWORK_TESTS_DIR/generated_compare_snapshot_test_cases.incl"

        # Ensure network-specific test directory exists
        mkdir -p "$NETWORK_TESTS_DIR"

        # Reset TEST_CASES for this network
        TEST_CASES=()

        # Collect all test cases for this network
        for FILE_PATH in "$NETWORK_PATH"/*; do
            if [[ -f "$FILE_PATH" ]]; then
                FILE_NAME=$(basename "$FILE_PATH")
                
                # Check if filename matches pattern: summary__rewards_summary_*.snap
                if [[ "$FILE_NAME" =~ ^summary__rewards_summary_([0-9]+)\.snap$ ]]; then
                    EPOCH="${BASH_REMATCH[1]}"
                    TEST_CASES+=("$NETWORK_NAME:$EPOCH")
                fi
            fi
        done

        # Skip if no test cases found
        if [[ ${#TEST_CASES[@]} -eq 0 ]]; then
            echo "No test cases found for network: $NETWORK_NAME"
            continue
        fi

        # Sort test cases
        IFS=$'\n' TEST_CASES=($(sort <<<"${TEST_CASES[*]}"))
        unset IFS

        # Create/truncate the output file
        > "$DEST_PATH"

        # Write test cases to file
        for TEST_CASE in "${TEST_CASES[@]}"; do
            NETWORK="${TEST_CASE%:*}"
            EPOCH="${TEST_CASE#*:}"

            echo "#[test_case($EPOCH)]" >> "$DEST_PATH"
        done

        # Append the test function content
        cat >> "$DEST_PATH" << 'EOF'
#[ignore]
pub fn compare_snapshot_test_case(epoch: u64) {
    let epoch = Epoch::from(epoch);
    compare_snapshot(epoch)
}
EOF

        echo "âœ… Generated test cases for '$NETWORK_NAME' at: $DEST_PATH"
    fi
done
