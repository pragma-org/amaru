[workspace.package]
version = "0.1.0"
edition = "2021"
description = "A Cardano blockchain node implementation"
license = "Apache-2.0"
authors = ["Amaru Maintainers <amaru@pragma.builders>"]
repository = "https://github.com/pragma-org/amaru"
homepage = "https://github.com/pragma-org/amaru"
documentation = "https://docs.rs/amaru"
rust-version = "1.84" # ⚠️ Also change in .cargo/rust-toolchain.toml

[workspace]
members = ["crates/*", "simulation/*"]
default-members = ["crates/*"]
resolver = "2"

[workspace.dependencies]
anyhow = "1.0.95"
async-trait = "0.1.83"
bech32 = "0.11.0"
clap = "4.5.20"
futures-util = "0.3.31"
gasket = "0.8.0"
hex = "0.4.3"
indicatif = "0.17.9"
indoc = "2.0"
minicbor = "0.25.1"
num = { version = "0.4.3", default-features = false, features = ["alloc"] }
opentelemetry = "0.27.1"
opentelemetry-otlp = "0.27.0"
opentelemetry_sdk = "0.27.1"
pallas-addresses = "0.32.0"
pallas-codec = "0.32.0"
pallas-crypto = "0.32.0"
pallas-math = "0.32.0"
pallas-network = "0.32.0"
pallas-primitives = "0.32.0"
pallas-traverse = "0.32.0"
rayon = "1.10"
rocksdb = { version = "0.23.0", default-features = false, features = ["bindgen-runtime", "snappy"] }
serde = { version = "1.0", default-features = false }
serde_json = { version = "1.0.128", default-features = false }
sysinfo = "0.33.1"
thiserror = "2.0.3"
tokio = "1.40.0"
tokio-util = "0.7.12"
tokio-stream = "0.1.17"
tracing = "0.1.40"
tracing-opentelemetry = "0.28.0"
tracing-subscriber = "0.3.18"

amaru-consensus = { path = "crates/amaru-consensus" }
amaru-kernel = { path = "crates/amaru-kernel" }
amaru-ledger = { path = "crates/amaru-ledger" }
amaru-mempool = { path = "crates/amaru-mempool" }
amaru-ouroboros = { path = "crates/ouroboros" }
amaru-ouroboros-traits = { path = "crates/ouroboros-traits" }
amaru-stores = { path = "crates/amaru-stores" }
iter-borrow = { path = "crates/iter-borrow" }

# The vrf crate has not been fully tested in production environments and still has several upstream issues that are open PRs but not merged yet.
vrf_dalek = { git = "https://github.com/txpipe/vrf", rev = "044b45a1a919ba9d9c2471fc5c4d441f13086676" }
kes-summed-ed25519 = { git = "https://github.com/txpipe/kes", rev = "f69fb357d46f6a18925543d785850059569d7e78" }

# dev-dependencies
ctor = "0.3.6"
tempfile = "3.15.0"
rand = "0.8"
proptest = { version = "1.5.0", default-features = false, features = ["alloc"] }
insta = "1.41.1"
envpath = "0.0.1-beta.3"
criterion = "0.5.1"
test-case = "3.3.1"

# build-dependencies
built = "0.7.1"

[workspace.lints.rust]
rust-2018-idioms = "warn"
rust-2018-compatibility = "warn"
rust-2021-compatibility = "warn"
#rust-2024-compatibility = "warn"
nonstandard-style = { level = "deny" }
future-incompatible = { level = "deny" }

[workspace.lints.clippy]
# Enable clippy lints for all members
# * https://doc.rust-lang.org/clippy/lints.htwml


# Group lints

# pedantic = "warn"
# restriction = "warn"
# nursery = "warn"
# cargo = "warn"
# others are enabled by default, see table here: https://doc.rust-lang.org/clippy/

# Individual lints

# All lints are detailed here: https://rust-lang.github.io/rust-clippy/master/index.html
# allow-unwrap-in-tests = true
# unreachable = "warn"
expect_used = "warn"
panic = "warn"
todo = "warn"
unwrap_used = "warn"
wildcard_enum_match_arm = "warn"

# See https://doc.rust-lang.org/cargo/reference/profiles.html

[profile.dev]
opt-level = 2
debug = false

[profile.dev-debug]
# Restore default 'dev' profile (see https://doc.rust-lang.org/cargo/reference/profiles.html#dev)
inherits = "dev"
opt-level = 0
debug = true

[profile.release]
lto = true
codegen-units = 1
